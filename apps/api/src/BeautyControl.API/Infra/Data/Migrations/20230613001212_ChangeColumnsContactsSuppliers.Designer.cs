// <auto-generated />
using System;
using BeautyControl.API.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeautyControl.API.Infra.Data.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20230613001212_ChangeColumnsContactsSuppliers")]
    partial class ChangeColumnsContactsSuppliers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Business")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeautyControl.API.Domain.Employees.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("BIT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<int>("Position")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("Employees", "Business");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("Category")
                        .HasColumnType("SMALLINT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)");

                    b.Property<int>("Quantity")
                        .HasColumnType("INT");

                    b.Property<int>("RunningOutOfStock")
                        .HasColumnType("INT");

                    b.Property<byte>("Status")
                        .HasColumnType("TINYINT")
                        .HasColumnName("StatusStock");

                    b.HasKey("Id");

                    b.ToTable("Products", "Business");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.StockMovements.StockMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATETIME");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<byte>("Process")
                        .HasColumnType("TINYINT");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("INT");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("StockMovements", "Business");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.Suppliers.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AverageRating")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers", "Business");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.Suppliers.SupplierRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FirstRatingAt")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("LastRatingAt")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(3);

                    b.Property<decimal>("Rating")
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnOrder(4);

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SuppliersRatings", "Business");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.Employees.Employee", b =>
                {
                    b.OwnsOne("BeautyControl.API.Domain._Common.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("VARCHAR(256)")
                                .HasColumnName("Email");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees", "Business");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("Email");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.Products.Product", b =>
                {
                    b.OwnsOne("BeautyControl.API.Domain.Products.Image", "Image", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .HasColumnType("VARCHAR(256)")
                                .HasColumnName("ImageName");

                            b1.Property<string>("Url")
                                .HasColumnType("VARCHAR(2048)")
                                .HasColumnName("ImageUrl");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products", "Business");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Image");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.StockMovements.StockMovement", b =>
                {
                    b.HasOne("BeautyControl.API.Domain.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautyControl.API.Domain.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautyControl.API.Domain.Suppliers.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Employee");

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.Suppliers.Supplier", b =>
                {
                    b.OwnsMany("BeautyControl.API.Domain._Common.ValueObjects.Email", "Emails", b1 =>
                        {
                            b1.Property<int>("SupplierId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.HasKey("SupplierId", "Id");

                            b1.ToTable("Suppliers", "Business");

                            b1.ToJson("Emails");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.OwnsMany("BeautyControl.API.Domain.Suppliers.Telephone", "Telephones", b1 =>
                        {
                            b1.Property<int>("SupplierId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.HasKey("SupplierId", "Id");

                            b1.ToTable("Suppliers", "Business");

                            b1.ToJson("Telephones");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.Navigation("Emails");

                    b.Navigation("Telephones");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.Suppliers.SupplierRating", b =>
                {
                    b.HasOne("BeautyControl.API.Domain.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeautyControl.API.Domain.Suppliers.Supplier", "Supplier")
                        .WithMany("SupplierRatings")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Employee");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BeautyControl.API.Domain.Suppliers.Supplier", b =>
                {
                    b.Navigation("SupplierRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
